image: maven:3.3.9-jdk-8

variables:
    # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  SPRING_PROFILES_ACTIVE: gitlab-ci # NB!! THIS ONE'S IMPORTANT!

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
# Note! Caching will only happen with successful builds!
cache:
  paths:
    - .m2/repository
  key: "$CI_BUILD_REF_NAME"


stages:
  - test
  - package

  # Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
# Note! Caching will only happen with successful builds!
cache:
  paths:
    - .m2/repository
  key: "$CI_BUILD_REF_NAME"

test:jdk8:
  stage: test
  script:
    - cd backend/springboot-server/
    - mvn clean test
  artifacts:
    when: always
    paths:
      - target/site/jacoco # We need to save the HTML-reports that Jacoco produces, so we can serve it on Gitlab Pages in the next stage
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml

# This is purely for exemplification, and does probably not hold a whole lot of value for the IDATT2106 project. Still,
# this will make the JAR produced from the Maven build available for download
package:jdk8:
    stage: package
    script:
      - cd backend/springboot-server/
      - mvn -DskipTests package # We already know the tests passed from the previous stage
    artifacts: # Make the JAR from the build available in Gitlab
      paths:
        - target/*.jar # Add more as needed here
#      expire_in: 69 days
    only:
      - master # We don't want to do this on feature branches
